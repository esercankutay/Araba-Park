<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="sp.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
</root>